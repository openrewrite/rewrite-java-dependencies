/*
 * Copyright 2021 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openrewrite.java.dependencies;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.openrewrite.DocumentExample;
import org.openrewrite.java.dependencies.table.VulnerabilityReport;
import org.openrewrite.test.RecipeSpec;
import org.openrewrite.test.RewriteTest;

import static org.assertj.core.api.Assertions.assertThat;
import static org.openrewrite.gradle.Assertions.buildGradle;
import static org.openrewrite.gradle.toolingapi.Assertions.withToolingApi;
import static org.openrewrite.maven.Assertions.pomXml;

@SuppressWarnings("GroovyAssignabilityCheck")
class DependencyVulnerabilityCheckTest implements RewriteTest {

    @Override
    public void defaults(RecipeSpec spec) {
        spec.recipe(new DependencyVulnerabilityCheck("runtime", true));
    }

    @DocumentExample
    @Test
    void gradleTransitive() {
        rewriteRun(
          spec -> spec.beforeRecipe(withToolingApi())
            .recipe(new DependencyVulnerabilityCheck(null, true)),
          //language=groovy
          buildGradle(
            """
              plugins { id 'java' }
              repositories { mavenCentral() }
              
              dependencies {
                  implementation 'org.openrewrite:rewrite-java:7.0.0'
              }
              """,
            """
              plugins { id 'java' }
              repositories { mavenCentral() }
              
              dependencies {
                  constraints {
                      runtimeOnly('io.github.classgraph:classgraph:4.8.112') {
                          because 'CVE-2021-47621'
                      }
                      implementation('com.fasterxml.jackson.core:jackson-databind:2.12.7.1') {
                          because 'CVE-2020-36518, CVE-2021-46877, CVE-2022-42003, CVE-2022-42004'
                      }
                  }
              
                  implementation 'org.openrewrite:rewrite-java:7.0.0'
              }
              """
          )
        );
    }

    @Test
    void milestoneVersion() {
        rewriteRun(
          spec -> spec.beforeRecipe(withToolingApi())
            .recipe(new DependencyVulnerabilityCheck(null, true)),
          //language=groovy
          buildGradle(
            """
              plugins { id 'java' }
              repositories { mavenCentral() }
              
              dependencies {
                  implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.0.0-M1'
              }
              """,
            """
              plugins { id 'java' }
              repositories { mavenCentral() }
              
              dependencies {
                  implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.0.27'
              }
              """
          )
        );
    }

    @Test
    void dependenciesBlockInFreestandingScript() {
        rewriteRun(
          spec -> spec.beforeRecipe(withToolingApi()),
          //language=groovy
          buildGradle(
            """
              repositories {
                  mavenLocal()
                  mavenCentral()
                  maven {
                     url = uri("https://oss.sonatype.org/content/repositories/snapshots")
                  }
              }
              dependencies {
                  implementation("org.apache.logging.log4j:log4j:2.13.1")
              }
              """,
            """
              repositories {
                  mavenLocal()
                  mavenCentral()
                  maven {
                     url = uri("https://oss.sonatype.org/content/repositories/snapshots")
                  }
              }
              dependencies {
                  implementation("org.apache.logging.log4j:log4j:2.13.2")
              }
              """,
            spec -> spec.path("dependencies.gradle")
          ),
          //language=groovy
          buildGradle(
            """
              plugins {
                  id("java")
              }
              apply from: 'dependencies.gradle'
              """
          )
        );
    }

    @Test
    void mavenTransitive() {
        rewriteRun(
          spec -> spec.recipe(new DependencyVulnerabilityCheck(null, true)),
          //language=xml
          pomXml(
            """
              <project>
                <groupId>com.mycompany.app</groupId>
                <artifactId>my-app</artifactId>
                <version>1</version>
                <dependencies>
                  <dependency>
                    <groupId>org.openrewrite</groupId>
                    <artifactId>rewrite-java</artifactId>
                    <version>7.0.0</version>
                  </dependency>
                </dependencies>
              </project>
              """,
            """
              <project>
                <groupId>com.mycompany.app</groupId>
                <artifactId>my-app</artifactId>
                <version>1</version>
                <dependencyManagement>
                  <dependencies>
                    <dependency>
                      <groupId>com.fasterxml.jackson.core</groupId>
                      <artifactId>jackson-databind</artifactId>
                      <version>2.12.7.1</version>
                    </dependency>
                  </dependencies>
                </dependencyManagement>
                <dependencies>
                  <dependency>
                    <groupId>org.openrewrite</groupId>
                    <artifactId>rewrite-java</artifactId>
                    <version>7.0.0</version>
                  </dependency>
                </dependencies>
              </project>
              """
          )
        );
    }

    @Test
    void maven() {
        rewriteRun(
          spec -> spec
            .dataTable(VulnerabilityReport.Row.class, rows -> {
                assertThat(rows).isNotEmpty();
                assertThat(rows).filteredOn(VulnerabilityReport.Row::isFixWithVersionUpdateOnly).isNotEmpty();
                assertThat(rows).extracting(VulnerabilityReport.Row::getCWEs).anySatisfy(cwes -> assertThat(cwes).isNotEmpty());
            }),
          //language=xml
          pomXml(
            """
              <project>
                <groupId>com.mycompany.app</groupId>
                <artifactId>my-app</artifactId>
                <version>1</version>
                <dependencies>
                  <dependency>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-core</artifactId>
                    <version>4.2.13.RELEASE</version>
                  </dependency>
                  <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j</artifactId>
                    <version>2.13.1</version>
                  </dependency>
                </dependencies>
              </project>
              """,
            """
              <project>
                <groupId>com.mycompany.app</groupId>
                <artifactId>my-app</artifactId>
                <version>1</version>
                <dependencies>
                  <dependency>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-core</artifactId>
                    <version>4.2.20.RELEASE</version>
                  </dependency>
                  <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j</artifactId>
                    <version>2.13.2</version>
                  </dependency>
                </dependencies>
              </project>
              """
          )
        );
    }

    @Test
    @Disabled("https://github.com/openrewrite/rewrite-java-dependencies/pull/7")
    void mavenSnakeyamlMajorMinor() {
        rewriteRun(
          spec -> spec
            .recipe(new DependencyVulnerabilityCheck("compile", false)),
          //language=xml
          pomXml(
            """
              <?xml version="1.0" encoding="UTF-8"?>
              <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
                <modelVersion>4.0.0</modelVersion>
                <groupId>com.example</groupId>
                <artifactId>openrewrite-playground</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <dependencies>
                  <dependency>
                    <groupId>org.yaml</groupId>
                    <artifactId>snakeyaml</artifactId>
                    <version>1.29</version>
                  </dependency>
                </dependencies>
              </project>
              """,
            """
              <?xml version="1.0" encoding="UTF-8"?>
              <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
                <modelVersion>4.0.0</modelVersion>
                <groupId>com.example</groupId>
                <artifactId>openrewrite-playground</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <dependencies>
                  <dependency>
                    <groupId>org.yaml</groupId>
                    <artifactId>snakeyaml</artifactId>
                    <version>1.33</version>
                  </dependency>
                </dependencies>
              </project>
              """
          )
        );
    }

    @Test
    void mavenJacksonMajorMinorPatch() {
        rewriteRun(
          spec -> spec
            .recipe(new DependencyVulnerabilityCheck("compile", false)),
          //language=xml
          pomXml(
            """
              <?xml version="1.0" encoding="UTF-8"?>
              <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
                <modelVersion>4.0.0</modelVersion>
                <groupId>com.example</groupId>
                <artifactId>openrewrite-playground</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <dependencies>
                  <dependency>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                    <version>2.13.0</version>
                  </dependency>
                </dependencies>
              </project>
              """,
            """
              <?xml version="1.0" encoding="UTF-8"?>
              <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
                <modelVersion>4.0.0</modelVersion>
                <groupId>com.example</groupId>
                <artifactId>openrewrite-playground</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <dependencies>
                  <dependency>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                    <version>2.13.4.2</version>
                  </dependency>
                </dependencies>
              </project>
              """
          )
        );
    }
}
